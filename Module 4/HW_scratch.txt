Homework Algorithmic Thinking, Module 4

######
# Q2 #
######

X = A
Y = T

X' = A  -A  A-
Y' = T  T-  -T

Max Length: len(X) + len(Y) = 2
comb, n = 1: 1 #min, m = 1
comb, n = 2: 2 #max, m = n

===================================================================

X = AC
Y = TG

X' = AC  A-C  A-C  AC-  AC-  -AC  -AC  AC--  A-C-  A--C  -A-C  -AC- --AC
Y' = TG  -TG  TG-  T-G  -TG  TG-  T-G  --TG  -T-G  -TG-  T-G-  T--G TG--

Max Length: len(X) + len(Y) = 4

comb, n = 2: 1 #min
comb, n = 3: 6
comb, n = 4: 6 #max

####################################################################
####################################################################
# Q4 #
######

SIGMA : s,s  s,s'  s,-  -,s
         5    2    -2   -4

X'	=	A	C	-	-	C	T
Y'	=	T	A	C	G	G	T
               s,s'    s,s'    -,s     -,s     s,s'    s,s
                2       2       -4      -4      2       5   = 3
                
####################################################################
####################################################################
# Q5 #
###### 

SIGMA = {s,s: 6,
        s,s': 2,
         s,-: -4}

X = AC
Y = GG

       A C -
       - G G
      -4 2 -4 = -6
      
       A C - -
       - - G G
    -1(4 4 4 4) = -16
    
       A C
       G G
       2 2 = 4  OPTIMUM
       
####################################################################
####################################################################
# Q6 #
######
         
m = 3
n = 2
B(3, 2) = 25

123 123 123                                                             
12- 1-2 -12
3 = 3c1
====
123- 123- 123-    12-3 12-3 12-3    1-23 1-23 1-23    -123 -123 -123
1--2 -1-2 --12    1-2- -12- --12    12-- -12- -1-2    12-- 1-2- 1--2
12 = 4c1 x 3c2
====
123-- 12--3 1--23 --123 -123- 12-3- 1-23- 1-2-3 -12-3 -1-23     
10 = 5c2
====

m * B(m - 1, n) = 3 * B(3 - 1, 2)
3 * B(2, 2)
3 * 13 = 39

B(m - 1, n) + B(m, n - 1) = B(3 - 1, 2) + B(3, 2 - 1)
B(2, 2) + B(3, 1) = 13 + B(3, 1) = 13 + 7 = 20

B(m - 1, n) + B(m - 1, n - 1) + B(m, n - 1)  # Recursive Formula
B(3 - 1, 2) + B(3 - 1, 2 - 1) + B(3, 2 - 1)
B(2, 2) + B(2, 1) + B(3, 1)
13 + 5 + 7 = 25

m * B(m - 1, n) + n * B(m, n - 1)
3 * B(3 - 1, 2) + 2 * B(3, 2 - 1)
3 * B(2, 2) + 2 * B(3, 1)
3 * 13 + 2 * 7 = 53

n * B(m, n - 1)
2 * B(3, 2 - 1)
2 * B(3, 1)
2 * 7 = 14

#########################################################################
#########################################################################
## Q11 ##
#########

string = "abc"
""
a
b
c
ab
bc
abc
n = 3, v = 7; 

string = 'abcd'
''
a
b
c
d
ab
bc
cd
abc
bcd
abcd
n = 4, v = 11, d = 4

string = 'abcde'
''
a
b
c
d
e
ab
bc
cd
de
abc
bcd
cde
abcd
bcde
abcde

n = 5, v = 16, d = 5

f(1) = 2
f(n) = f(n - 1) + n = (n + 1) + (n(n - 1) / 2)

############################################################################
############################################################################
## Q12 ##
#########

=======
example
=======

X = AC
Y = TAG

M = {(s,s) : 5,
     (s,s'): 2,
     (s,-) : -2,
     (-,s) : -4}
     
S   [0] [1] [2] [3]
[0]  0  -4  -8  -12
[1] -2   2   1  -3
[2] -4   0   4   3

S[1,0] = A
         -
        -2 
S[2,0] = A  C
         -  - 
        -2 -2
S[0,1] = -
         T
        -4
S[0,2] = -  -
         T  A
        -4 -4 
S[0,3] = -  -  -
         T  A  G
        -4 -4 -4
        
S[1,1]: X[i] = A; Y[j] = T
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = 0 + M[A,T] = 0 + 2   =   2 **
    S[i-1, j] + M[X[i-1], -] = -4 + M[A,-] = -4 + -2       =  -6
    S[i, j-1] + M[-, Y[j-1]] = -2 + M[-,T] = -2 + -4       =  -6

S[1,2]: X[i] = A; Y[j] = A
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = -4 + M[A,A] = -4 + 5 =   1 **
    S[i-1, j] + M[X[i-1], -] = -8 + -2                     = -10
    S[i, j-1] + M[-, Y[j-1]] = 2 + M[-,T] = 2 + -4         =  -2

S[1,3]: X[i] = A; Y[j] = G
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = -8 + M[A,G] = -8 + 2 =  -6   
    S[i-1, j] + M[X[i-1], -] = -12 + -2                    = -14
    S[i, j-1] + M[-, Y[j-1]] = 1 + M[-,T] = 1 + -4         =  -3 **

S[2,1]: X[i] = C; Y[j] = T
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = -2 + M[C,T] = -2 + 2 =   0 **
    S[i-1, j] + M[X[i-1], -] = 2 + -2                      =   0 **
    S[i, j-1] + M[-, Y[j-1]] = -4 + M[-,T] = -4 + -4       =  -8     

S[2,2]: X[i] = C; Y[j] = A
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = 2 + M[C,A] = 2 + 2   =   4 **
    S[i-1, j] + M[X[i-1], -] = 1 + -2                      =  -1
    S[i, j-1] + M[-, Y[j-1]] = 0 + M[-,T] = 0 + -4         =  -4               

S[2,3]: X[i] = C; Y[j] = G
    S[i-1, j-1] + M[X[i-1], Y[j-1]] = 1 + M[C,G] = 1 + 2   =   3 **
    S[i-1, j] + M[X[i-1], -] = -3 + -2                     =  -5
    S[i, j-1] + M[-, Y[j-1]] = 4 + M[-,T] = 4 + -4         =   0
    
Optimal Global Alignment:
    -  A  C  [2,3] -> [1,2] -> [0,1]
    T  A  G
   -4  5  2 = 3
   
X = A A
Y = T A A T

M = {(s, s) : 10
     (s, s'): 4
     (s, -) : -6}
     
S   [0] [1] [2] [3] [4]
[0]  0   0   0   0   0
[1]  0   4   10  10  4
[2]  0   4   14  20  14

S[0, 1]